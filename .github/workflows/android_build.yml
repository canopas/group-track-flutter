name: Android Build APK

on: push

jobs:

  build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 17.0.6
          cache: 'gradle'

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundle-cache: true

      - name: Retrieve the secret and decode it to file
        env:
          CONFIG_DART_BASE64: ${{ secrets.CONFIG_DART_BASE64 }}
          FIREBASE_OPTIONS_BASE64: ${{ secrets.FIREBASE_OPTIONS_BASE64 }}
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}

        run: |
          echo $CONFIG_DART_BASE64 | base64 -di > data/lib/config.dart
          cd app
          echo $FIREBASE_OPTIONS_BASE64 | base64 -di > lib/firebase_options.dart
          echo $GOOGLE_SERVICES_JSON_BASE64 | base64 -di > android/app/google-services.json


      - name: Install Dependencies
        run: |
          cd data && flutter clean && flutter pub get
          cd ../style && flutter clean && flutter pub get
          cd ../app && flutter clean && flutter pub get
          cd ..

      - name: Generate build
        env:
          APKSIGN_KEYSTORE_BASE64: ${{ secrets.APKSIGN_KEYSTORE_BASE64 }}
          APKSIGN_KEYSTORE_PASS: ${{ secrets.APKSIGN_KEYSTORE_PASS }}
          APKSIGN_KEY_ALIAS: ${{ secrets.APKSIGN_KEY_ALIAS }}
          APKSIGN_KEY_PASS: ${{ secrets.APKSIGN_KEY_PASS }}
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}

        run: |
          echo  $APKSIGN_KEYSTORE_BASE64 | base64 -di > release.keystore
          export APKSIGN_KEYSTORE=`pwd`/release.keystore
          cd app
          file='VERSION'
          fileData=`cat $file`
          IFS='.'
          read -a versionValue <<< "$fileData"
          buildNumber=$(( ${versionValue[0]} * 1000000 + ${versionValue[1]} * 10000 + ${{ github.run_number }} ))
          IFS=''
          buildName="${versionValue[0]}.${versionValue[1]}.${{ github.run_number }}"
          echo "Generating android build $buildName $buildNumber"          
          flutter build apk --release --build-number=$buildNumber --build-name=$buildName
          mv build/app/outputs/apk/release/*.apk .

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v2
        with:
          name: YourSpace APK
          path: app/app*.apk
          retention-days: 2