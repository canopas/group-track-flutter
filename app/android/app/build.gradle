plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.canopas.yourspace"
    compileSdkVersion 34
    ndkVersion "25.1.8937393"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.canopas.yourspace"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

        def mapsApiKey = System.getenv('MAPS_API_KEY')
        if (mapsApiKey != null) {
            manifestPlaceholders += [MAPS_API_KEY: mapsApiKey]
        } else if (localProperties.containsKey('MAPS_API_KEY')) {
            manifestPlaceholders += [MAPS_API_KEY: localProperties.getProperty('MAPS_API_KEY')]
        } else {
            manifestPlaceholders += [MAPS_API_KEY: '']
        }
    }

    signingConfigs {
        if (System.getenv("APKSIGN_KEYSTORE") != null) {
            release {
                storeFile file(System.getenv("APKSIGN_KEYSTORE"))
                storePassword System.getenv("APKSIGN_KEYSTORE_PASS")
                keyAlias System.getenv("APKSIGN_KEY_ALIAS")
                keyPassword System.getenv("APKSIGN_KEY_PASS")
            }
        } else {
            release {
                keyAlias 'yourspace'
                keyPassword 'yourspace'
                storeFile file('debug.keystore')
                storePassword 'yourspace'
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.google.android.gms:play-services-location:21.3.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.8.0"
}
